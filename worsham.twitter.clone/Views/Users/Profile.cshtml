@model UserProfileModel

@{
    ViewData["Title"] = $"{Model.UserName} / X";
    Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";

    var DictOfTweeterProfilePictureNamess = ViewData["TweeterProfilePictureUrls"] as Dictionary<int, string>;
    var DictOfRetweeterProfilePictureNames = ViewData["RetweeterProfilePictureUrls"] as Dictionary<int, string>;
    var DictOfLikedProfilePictureUrls = ViewData["LikedProfilePictureUrls"] as Dictionary<int, string>;

    string profilePictureSrc = @Model.ProfilePictureUrl ?? "/uploads/profile_pictures/default/1.jpg";
    bool userIsViewingOwnProfile;
    bool isValidBoolViewing = Boolean.TryParse(ViewData["UserIsViewingOwnProfile"]?.ToString(), out userIsViewingOwnProfile);

    bool currentUserIsFollowing;
    bool isValidBoolFollowing = Boolean.TryParse(ViewData["CurrentUserIsFollowing"]?.ToString(), out currentUserIsFollowing);

    int followId;
    bool isValidBoolFollowId = Int32.TryParse(ViewData["FollowId"]?.ToString(), out followId);

    string errorNotification = ViewData["errorNotification"]?.ToString() ?? "";
}
<partial name="_EditProfileModal" />
<div id="profile">
    @if (!string.IsNullOrEmpty(errorNotification))
    {
        <div class="alert alert-danger alert-dismissible mt-5" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
            </svg>
            <span>@errorNotification</span><button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <h2 class="mt-3 mb-0">@Model.UserName</h2>
    <div class="text-secondary small">@Model.Tweets.Count posts</div>
    <div class="card">
        <img id="profileBackdrop" class="card-img-top border-0 profile-backdrop">
        <img id="profilePicture" class="profile-picture rounded-circle" decoding="async" src="@($"~/uploads/profile_pictures/{Model.ProfilePictureUrl}")" asp-append-version="true" title="profile picture" />
        @if (isValidBoolViewing && userIsViewingOwnProfile)
        {
            <button id="btnEdit" type="button" class="btn btn-light rounded-pill fw-bold d-block profile-btn" data-bs-toggle="modal" data-bs-target="#editProfileModal" autocomplete="off">Edit profile</button>
        }
        else
        {
            if (isValidBoolFollowing && currentUserIsFollowing)
            {
                <form asp-controller="Follows" asp-action="Delete" method="post">
                    <input type="hidden" id="followId" name="id" value="@followId" />
                    <button id="btnUnFollow" type="submit" class="btn btn-light rounded-pill fw-bold d-block profile-btn">Following</button>
                </form>
            }
            else
            {
                <form asp-controller="Follows" asp-action="Create" method="post">
                    <input type="hidden" name="userId" value="@Model.UserId" />
                    <button id="btnFollow" type="submit" class="btn btn-light rounded-pill fw-bold d-block profile-btn">Follow</button>
                </form>
            }
        }
        <div class="card-body mt-5">
            <h5 class="card-title fw-bold">@Model.UserName</h5>
            <p class="card-text">@Model.Bio</p>
        </div>
        <ul class="list-group list-group-flush list-group-horizontal border-0">
            <li class="list-group-item border-0"><span class="fw-bold">@Model.FollowingCount</span> <span class="text-secondary">Following</span></li>
            <li class="list-group-item border-0"><span class="fw-bold">@Model.FollowersCount</span> <span class="text-secondary">Followers</span></li>
        </ul>
    </div>

    <div class="card">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
                <li class="nav-item">
                    <button type="button" id="btnTweets" class="nav-link active" aria-current="true">Tweets</button>
                </li>
                <li class="nav-item">
                    <button type="button" id="btnReTweets" class="nav-link">ReTweets</button>
                </li>
                <li class="nav-item">
                    <button type="button" id="btnLikes" class="nav-link">Likes</button>
                </li>
            </ul>
        </div>

        <div id="panelTweets">
            @{
                string fileName = "\\default\\1.jpg";
            }
            @foreach (var tweet in Model.Tweets)
            {
                @* tweet.TweeterId *@
                if (DictOfTweeterProfilePictureNamess.ContainsKey(tweet.Id))
                {
                    // store the value of the key in a variable
                    fileName = DictOfTweeterProfilePictureNamess[tweet.Id];
                }
                <div class="row">
                    <div class="col col-1">
                        <img class="user-img rounded-circle" decoding="async" src="@($"~/uploads/profile_pictures/{fileName}")" asp-append-version="true" title="profile picture" />
                    </div>
                    <div class="col col-11">
                        <div class="card-body">
                            <div class="card-title">
                                <span class="fw-bold">@tweet.Tweeter.UserName</span><span class="text-secondary"> · </span><span class="text-secondary">@tweet.CreationDateTime</span>
                            </div>
                            <p class="card-text">@tweet.Content</p>
                        </div>
                    </div>
                </div>
            }
        </div>



        <div id="panelReTweets" class="d-none">
            @{
                string retweetFileName = "\\default\\1.jpg";
            }
            @foreach (var reTweet in Model.RetweetedTweets)
            {

                if (DictOfRetweeterProfilePictureNames.ContainsKey(reTweet.OriginalTweet.Id))
                {
                    // store the value of the key in a variable
                    retweetFileName = DictOfRetweeterProfilePictureNames[reTweet.OriginalTweet.Id];
                }
                <div class="row">
                    <div class="col col-1">
                        <img class="user-img rounded-circle" decoding="async" src="@($"~/uploads/profile_pictures/{retweetFileName}")" asp-append-version="true" title="profile picture" />
                    </div>
                    <div class="col col-11">
                        <div class="card-body">
                            <div class="card-title">
                                <span class="fw-bold">@reTweet.OriginalUserName</span><span class="text-secondary"> · </span><span class="text-secondary">@reTweet.OriginalTweetCreationDateTime</span>
                            </div>
                            <p class="card-text">@reTweet.OriginalTweetContent</p>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="panelLikes" class="d-none">
            @{
                string likedTweetFileName = "\\default\\1.jpg";
            }
            @foreach (var likedTweet in Model.LikedTweetInfos)
            {
                if (DictOfLikedProfilePictureUrls.ContainsKey(likedTweet.LikedTweet.Id))
                {
                    // store the value of the key in a variable
                    likedTweetFileName = DictOfLikedProfilePictureUrls[likedTweet.LikedTweet.Id];
                }

                <div class="row">
                    <div class="col col-1">
                        <img class="user-img rounded-circle" decoding="async" src="@($"~/uploads/profile_pictures/{likedTweetFileName}")" asp-append-version="true" title="profile picture" />
                    </div>
                    <div class="col col-11">
                        <div class="card-body">
                            <div class="card-title">
                                <span class="fw-bold">@likedTweet.OriginalUserName</span><span class="text-secondary"> · </span><span class="text-secondary">@likedTweet.OriginalTweetCreationDateTime</span>
                            </div>
                            <p class="card-text">@likedTweet.OriginalTweetContent</p>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>
<!-- <script src="~/js/profilePage.js" asp-append-version="true"></script> -->
