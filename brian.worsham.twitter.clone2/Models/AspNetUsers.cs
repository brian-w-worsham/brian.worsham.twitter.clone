// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace brian.worsham.twitter.clone2.Models
{
    [Index("NormalizedEmail", Name = "EmailIndex")]
    public partial class AspNetUsers
    {
        public AspNetUsers()
        {
            AspNetUserClaims = new HashSet<AspNetUserClaims>();
            AspNetUserLogins = new HashSet<AspNetUserLogins>();
            AspNetUserTokens = new HashSet<AspNetUserTokens>();
            FollowsFollowedUser = new HashSet<Follows>();
            FollowsFollowerUser = new HashSet<Follows>();
            Likes = new HashSet<Likes>();
            Role = new HashSet<AspNetRoles>();
        }

        [Key]
        public string Id { get; set; }
        [StringLength(256)]
        public string UserName { get; set; }
        [StringLength(256)]
        public string NormalizedUserName { get; set; }
        [StringLength(256)]
        public string Email { get; set; }
        [StringLength(256)]
        public string NormalizedEmail { get; set; }
        public bool EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string ConcurrencyStamp { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public bool TwoFactorEnabled { get; set; }
        public DateTimeOffset? LockoutEnd { get; set; }
        public bool LockoutEnabled { get; set; }
        public int AccessFailedCount { get; set; }
        [StringLength(160)]
        [Unicode(false)]
        public string Bio { get; set; }
        [StringLength(255)]
        public string ProfilePictureURL { get; set; }

        [InverseProperty("User")]
        public virtual ICollection<AspNetUserClaims> AspNetUserClaims { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserLogins> AspNetUserLogins { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserTokens> AspNetUserTokens { get; set; }
        [InverseProperty("FollowedUser")]
        public virtual ICollection<Follows> FollowsFollowedUser { get; set; }
        [InverseProperty("FollowerUser")]
        public virtual ICollection<Follows> FollowsFollowerUser { get; set; }
        [InverseProperty("UserThatLikedTweet")]
        public virtual ICollection<Likes> Likes { get; set; }

        [ForeignKey("UserId")]
        [InverseProperty("User")]
        public virtual ICollection<AspNetRoles> Role { get; set; }
    }
}